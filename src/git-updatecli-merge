#!/usr/bin/env bash
set -eu

usage() {
  printf 'usage: git updatecli-merge [-r <remote>]
OPTIONS
  -f  Set the additional filter (example: github_actions) [default: ""]
  -r  Set the remote to check [default: origin]

EXAMPLES
git updatecli-merge -r github
git updatecli-merge
'
}

remote="origin"
help=false

while getopts :r:h flag
do
  case "${flag}" in
    r) remote=${OPTARG};;
    h) help=true;;
    *)
  esac
done

if [ "$help" = true ]; then
  usage
  exit 1
fi

default_branch=$(git remote show "${remote}" | grep 'HEAD branch' | cut -d' ' -f5)

git branch -f updatecli-merge "${default_branch}"

git for-each-ref --shell --format="ref=%(refname)" "refs/heads/updatecli_*" | \
while read -r entry
do
  eval "${entry}"
  ref="${ref:?}"
  branch="${ref#refs/heads/}"
  echo "Working on ${branch}"
  git checkout "${branch}"
  git rebase updatecli-merge
  git checkout updatecli-merge
  git merge --ff-only "${branch}"
done
